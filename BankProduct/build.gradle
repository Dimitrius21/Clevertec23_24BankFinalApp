plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.7'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.freefair.lombok' version '8.4'
}

java {
    sourceCompatibility = targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    springCloudVersion = '2022.0.4'
    openApiVersion = '2.1.0'
    mapstructVersion = '1.5.5.Final'
    testContainersVersion = '1.19.3'
    jwtVersion = '0.12.3'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.liquibase:liquibase-core'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
 //   implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1'
    implementation "io.jsonwebtoken:jjwt-api:$jwtVersion"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation project(':exception-handling-starter')

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jwtVersion"

    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    //https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock-standalone
    testImplementation 'com.github.tomakehurst:wiremock-standalone:3.0.0-beta-10'
    testImplementation "org.testcontainers:postgresql:$testContainersVersion"
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation 'org.assertj:assertj-core:3.25.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    //ignoreFailures = true
}
